name: Deploy Laravel via SSH

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to HestiaCP server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 300s
          script: |
            set -e
            cd /home/monexa
            
            # Pull latest changes first
            echo "üîÑ Pulling latest changes..."
            git pull origin main || { echo "‚ùå Git pull failed"; exit 1; }
            
            # Check if Docker Hub is accessible
            echo "üîç Checking Docker Hub connectivity..."
            DOCKER_HUB_OK=false
            if docker pull hello-world:latest >/dev/null 2>&1; then
              echo "‚úÖ Docker Hub is accessible"
              DOCKER_HUB_OK=true
            else
              echo "‚ö†Ô∏è Docker Hub is not accessible, using no-build strategy"
            fi
            
            # Stop containers gracefully
            echo "‚èπÔ∏è Stopping containers..."
            docker-compose down --remove-orphans || true
            
            if [ "$DOCKER_HUB_OK" = true ]; then
              # If Docker Hub is working, try to build
              echo "üî® Building containers..."
              for i in {1..2}; do
                echo "Build attempt $i/2..."
                if docker-compose build --no-cache; then
                  echo "‚úÖ Build successful!"
                  break
                else
                  echo "‚ùå Build attempt $i failed"
                  if [ $i -eq 2 ]; then
                    echo "‚ùå Build failed, falling back to no-build strategy"
                    DOCKER_HUB_OK=false
                  else
                    echo "‚è≥ Waiting 15 seconds before retry..."
                    sleep 15
                  fi
                fi
              done
            fi
            
            if [ "$DOCKER_HUB_OK" = false ]; then
              # No-build strategy: Use existing images and update code
              echo "üîÑ Using no-build deployment strategy..."
              
              # Start containers without building
              echo "üöÄ Starting existing containers..."
              docker-compose up -d --remove-orphans --no-build || {
                echo "‚ùå No-build start failed, will try to build anyway"
                docker-compose up -d --remove-orphans --build || { echo "‚ùå Container start failed"; exit 1; }
              }
            else
              # Start newly built containers
              echo "üöÄ Starting newly built containers..."
              docker-compose up -d --remove-orphans || { echo "‚ùå Container start failed"; exit 1; }
            fi
            
            # Wait for app container to be ready
            echo "‚è≥ Waiting for app container..."
            for i in {1..30}; do
              if docker-compose exec -T app-monexa php --version >/dev/null 2>&1; then
                echo "‚úÖ App container is ready!"
                break
              fi
              if [ $i -eq 30 ]; then
                echo "‚ùå App container failed to start"
                docker-compose logs app-monexa
                exit 1
              fi
              sleep 2
            done
            
            # Run post-deployment commands
            echo "üîß Running post-deployment commands..."
            docker-compose exec -T app-monexa composer install --no-interaction --no-dev --optimize-autoloader || true
            docker-compose exec -T app-monexa php artisan config:clear || true
            docker-compose exec -T app-monexa php artisan cache:clear || true
            docker-compose exec -T app-monexa php artisan route:clear || true
            docker-compose exec -T app-monexa php artisan view:clear || true
            docker-compose exec -T app-monexa php artisan optimize || true
            
            # Check if containers are running
            echo "üîç Checking deployment status..."
            if docker-compose ps | grep -q "Up"; then
              echo "üéâ Deployment completed successfully!"
              docker-compose ps
            else
              echo "‚ùå Some containers are not running!"
              docker-compose ps
              docker-compose logs --tail=20
              exit 1
            fi
